// <auto-generated />
using System;
using BackendServer.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackendServer.Migrations
{
    [DbContext(typeof(BHPNTDbContext))]
    [Migration("20230615090413_InitData")]
    partial class InitData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.AnnexContract", b =>
                {
                    b.Property<string>("HDPL")
                        .HasColumnType("text");

                    b.Property<decimal?>("AdditionalAnnexFee")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AnnexFeeVAT")
                        .HasColumnType("numeric");

                    b.Property<string>("AnnexPerson")
                        .HasColumnType("text");

                    b.Property<string>("Beneficiaries")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HDBH")
                        .HasColumnType("text");

                    b.Property<string>("InfoCBNVTVTTCode")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("TVTTCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("HDPL");

                    b.HasIndex("HDBH")
                        .IsUnique();

                    b.HasIndex("InfoCBNVTVTTCode");

                    b.ToTable("AnnexContracts");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.Branch", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasColumnType("text");

                    b.Property<string>("BranchName")
                        .HasColumnType("text");

                    b.HasKey("BranchCode");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.Collateral", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("text");

                    b.Property<string>("AddressCollateral")
                        .HasColumnType("text");

                    b.Property<string>("HDBH")
                        .HasColumnType("text");

                    b.Property<string>("PropertyType")
                        .HasColumnType("text");

                    b.Property<string>("Relationship")
                        .HasColumnType("text");

                    b.Property<string>("StatusCollateral")
                        .HasColumnType("text");

                    b.Property<decimal?>("ValueCollateral")
                        .HasColumnType("numeric");

                    b.HasKey("Ref");

                    b.HasIndex("HDBH")
                        .IsUnique();

                    b.ToTable("Collaterals");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.Customer", b =>
                {
                    b.Property<string>("Cif")
                        .HasColumnType("text");

                    b.Property<string>("CCCD")
                        .HasColumnType("text");

                    b.Property<string>("CustomerType")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Cif");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.InfoCBNV", b =>
                {
                    b.Property<string>("TVTTCode")
                        .HasColumnType("text");

                    b.Property<string>("BranchCode")
                        .HasColumnType("text");

                    b.Property<string>("InfoCBNVBranchCode")
                        .HasColumnType("text");

                    b.Property<string>("NameTVTT")
                        .HasColumnType("text");

                    b.HasKey("TVTTCode");

                    b.HasIndex("BranchCode");

                    b.ToTable("InfoCBNVs");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.InsuranceContract", b =>
                {
                    b.Property<string>("HDBH")
                        .HasColumnType("text");

                    b.Property<string>("Beneficiaries")
                        .HasColumnType("text");

                    b.Property<string>("Cif")
                        .HasColumnType("text");

                    b.Property<string>("CustomerCif")
                        .HasColumnType("text");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HDPL")
                        .HasColumnType("text");

                    b.Property<string>("InfoCBNVTVTTCode")
                        .HasColumnType("text");

                    b.Property<string>("InsuranceBeneficiary")
                        .HasColumnType("text");

                    b.Property<decimal?>("InsuranceFee")
                        .HasColumnType("numeric");

                    b.Property<string>("InsurancePartnerCode")
                        .HasColumnType("text");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("text");

                    b.Property<bool?>("NewOrRenewed")
                        .HasColumnType("boolean");

                    b.Property<int?>("NumberOfPayments")
                        .HasColumnType("integer");

                    b.Property<string>("OtherInsuranceType")
                        .HasColumnType("text");

                    b.Property<string>("PartnerCode")
                        .HasColumnType("text");

                    b.Property<string>("Ref")
                        .HasColumnType("text");

                    b.Property<decimal?>("STBH")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("TVTTCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("HDBH");

                    b.HasIndex("CustomerCif");

                    b.HasIndex("InfoCBNVTVTTCode");

                    b.HasIndex("PartnerCode");

                    b.ToTable("InsuranceContracts");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.Partner", b =>
                {
                    b.Property<string>("PartnerCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("PartnerCode");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.PaymentPeriod", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("FeePaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HDBH")
                        .HasColumnType("text");

                    b.Property<string>("InsuranceContractHDBH")
                        .HasColumnType("text");

                    b.Property<decimal?>("Money")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("InsuranceContractHDBH");

                    b.ToTable("PaymentPeriods");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.AnnexContract", b =>
                {
                    b.HasOne("BaoHiemPhiNhanTho.BackendServer.Models.InsuranceContract", "InsuranceContract")
                        .WithOne("AnnexContract")
                        .HasForeignKey("BaoHiemPhiNhanTho.BackendServer.Models.AnnexContract", "HDBH");

                    b.HasOne("BaoHiemPhiNhanTho.BackendServer.Models.InfoCBNV", "InfoCBNV")
                        .WithMany("AnnexContracts")
                        .HasForeignKey("InfoCBNVTVTTCode");

                    b.Navigation("InfoCBNV");

                    b.Navigation("InsuranceContract");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.Collateral", b =>
                {
                    b.HasOne("BaoHiemPhiNhanTho.BackendServer.Models.InsuranceContract", "InsuranceContract")
                        .WithOne("Collateral")
                        .HasForeignKey("BaoHiemPhiNhanTho.BackendServer.Models.Collateral", "HDBH");

                    b.Navigation("InsuranceContract");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.InfoCBNV", b =>
                {
                    b.HasOne("BaoHiemPhiNhanTho.BackendServer.Models.Branch", "Branch")
                        .WithMany("InfoCBNVs")
                        .HasForeignKey("BranchCode");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.InsuranceContract", b =>
                {
                    b.HasOne("BaoHiemPhiNhanTho.BackendServer.Models.Customer", "Customer")
                        .WithMany("InsuranceContracts")
                        .HasForeignKey("CustomerCif");

                    b.HasOne("BaoHiemPhiNhanTho.BackendServer.Models.InfoCBNV", "InfoCBNV")
                        .WithMany("InsuranceContracts")
                        .HasForeignKey("InfoCBNVTVTTCode");

                    b.HasOne("BaoHiemPhiNhanTho.BackendServer.Models.Partner", "Partner")
                        .WithMany("InsuranceContracts")
                        .HasForeignKey("PartnerCode");

                    b.Navigation("Customer");

                    b.Navigation("InfoCBNV");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.PaymentPeriod", b =>
                {
                    b.HasOne("BaoHiemPhiNhanTho.BackendServer.Models.InsuranceContract", "InsuranceContract")
                        .WithMany("PaymentPeriods")
                        .HasForeignKey("InsuranceContractHDBH");

                    b.Navigation("InsuranceContract");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.Branch", b =>
                {
                    b.Navigation("InfoCBNVs");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.Customer", b =>
                {
                    b.Navigation("InsuranceContracts");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.InfoCBNV", b =>
                {
                    b.Navigation("AnnexContracts");

                    b.Navigation("InsuranceContracts");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.InsuranceContract", b =>
                {
                    b.Navigation("AnnexContract");

                    b.Navigation("Collateral");

                    b.Navigation("PaymentPeriods");
                });

            modelBuilder.Entity("BaoHiemPhiNhanTho.BackendServer.Models.Partner", b =>
                {
                    b.Navigation("InsuranceContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
